# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Scala CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'sbt'
    - name: Run tests
      run: sbt -mem 4096 test
  examples:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        module: [hello,calculator,hitcounter,httpbin,streamed]
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'sbt'    
    - name: build ${{ matrix.module }}
      run: sbt -mem 4096 "project ${{ matrix.module }}; nativeLink"
    - name: upload target
      uses: actions/upload-artifact@v2
      with: 
        name: ${{ matrix.module }}
        path: examples${{ matrix.module }}/target

#  release:
#    runs-on: ubuntu-latest
#    steps:
#    - name: Upload binaries to release
#      uses: svenstaro/upload-release-action@v2
#      with:
#        repo_token: ${{ secrets.GITHUB_TOKEN }}
#        file: examples/hello/target/scala-2.13/hello
#        asset_name: mything
#        tag: ${{ github.ref }}
#        overwrite: true
#        body: "Example CGI-BIN binaries created from the examples folders"
